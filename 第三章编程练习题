# Java-
import java.util.*;

public class Chapter3 {
	public static void main(String[] args) {
		
		//双分支if-else语句复习题
		double payment = 10;
		Scanner input = new Scanner(System.in);
		System.out.print("请输入socre：");
		int score = input.nextInt();
		if(score > 90) {
			payment = (1 + 0.03) * payment;
			System.out.println(payment);
	}
		else {
			payment = (1 + 0.01) * payment;
			System.out.println(payment);
		}
		
		//嵌套if语句和多分支if-else语句复习题
		 int x = 3, y = 2;
		 if (x > 2 ) 
			 if (y > 2) {
				 int z = x + y;
				 System.out.println("z is " + z);
				 }
			 
		else 
			System.out.println("x is " + x);
		 
		 //解一元二次方程：可以使用下面的公式求一元二次方式ax^2 + bx + c = 0 的两个根
		 //r(1) = -b + Math.sqrt(b^2 - 4ac)/(2a); r(2) = -b - Math.sqrt(b^2 - 4ac)/(2a);
		 //b^2 - 4ac 为一元二次方程的判别式，如果它是正值，那么一元二次方程就有两个实数根；
		 //编写程序，提示用户输入a、b和c的值；
		 System.out.println("请输入a、b和c的值：");
		 double a = input.nextDouble();
		 double b = input.nextDouble();
		 double c = input.nextDouble();
		 
		 double discriminant = Math.pow(b,2) - 4 * a * c;
		 if (discriminant > 0 ) {
			 double r1 = (-b + Math.sqrt(discriminant))/(2*a);
			 double r2 = (-b - Math.sqrt(discriminant))/(2*a);
			 System.out.println("它的两个根分别是：" + r1 + " and " + r2);
		 }
		 else if (discriminant == 0 ) {
			 double r3 = -b / 2*a;
			 System.out.println("它的根为：" + r3);
		 }
		 else  {
			 System.out.println("The equation has no real roots");
		 }
		 
		 //随机产生三个一位整数，然后提示用户输入这三个整数的和；
		 int number1 = (int)(Math.random() * 10);
		 int number2 = (int)(Math.random() * 10);
		 int number3 = (int)(Math.random() * 10);
		 
		 System.out.print("请输入 " + number1 + " + " + number2 + " + " + number3 +" 的答案：");
		 
		 int answer1 = input.nextInt();
		 
		 int answer2 = number1 + number2 + number3;
		 
		 if (answer1 == answer2) {
			 System.out.println("you are correct!");
		 }
		 else 
			 System.out.println("you are wrong.");
		     System.out.println("The correct answer is " + answer2);
		     
		 
		 //可以使用Cramer规则解线性方程组：
		//ax + by = e         y = (af - ec) / (ad - bc);
		//cx + dy = f         x = (ed - bf) / (ad - bc);
		//编写程序，提示用户输入a、b、c、d、e和f，然后显示结果。
		//如果     ad - bc = 0 ；  则报告消息“the equation has no solution”
		
		System.out.println("已知方程式为 ax + by = e , cx + dy = f");
	    System.out.println("请输入a、b、c、d、e和f的值：");
	    
	    float a1 = input.nextFloat();
	    float b1 = input.nextFloat();
	    float c1 = input.nextFloat();
	    float d1 = input.nextFloat();
	    float e1 = input.nextFloat();
	    float f1 = input.nextFloat();
		
	    float deno = a1 * d1 - b1 * c1;
		if ( deno == 0 ) {
			System.out.println("the equation has no solution.");
		}
		else {
			float s1 = (e1 * d1 - b1 * f1) / ( deno );
			float s2 = (a1 * f1 - e1 * c1) / ( deno );
			
			System.out.println("它的解为：" + "x = " + s1 + " and " + "y = " + s2);
		}
			
		 
		//编写一个随机产生1和12之间整数的程序，并且根据数字1.2，……，12显示相应的月份；
		int month = (int)(1 + Math.random() * 12);
		switch (month) {
		    case 1 : System.out.println("January");
		    break;
		    case 2 : System.out.println("February");
		    break;
		    case 3 : System.out.println("March");
		    break;
		    case 4 : System.out.println("April");
		    break;
		    case 5 : System.out.println("May");
		    break;
		    case 6 : System.out.println("June");
		    break;
		    case 7 :System.out.println("July");
		    break;
		    case 8 : System.out.println("August");
		    break;
		    case 9 : System.out.println("September");
		    break;
		    case 10 : System.out.println("Octorber");
		    break;
		    case 11 : System.out.println("November");
		    break;
		    case 12 : System.out.println("December");
		    break;
		}
		
		
		//编写一个程序，提示用户输入代表今天日期的数字（周日为0，周一为1 ，……，周六为6）。
		//提示用户输入一个今天之后的天数，作为代表将来某天的数字，然后显示这天是星期几。
		System.out.print("请输入代表今天日期的数字（如周日为0，周一为1，……，周六为6）：");
		int day = input.nextInt();
		System.out.print("请输入一个今天之后的天数：");
		int addDay = input.nextInt();
		
		switch ( (addDay + day) % 7) {
		    case 0 : System.out.println("将来这天为周日");
		    break;
		    case 1 : System.out.println("将来这天为周一");
		    break;
		    case 2 : System.out.println("将来这天为周二");
		    break;
		    case 3 : System.out.println("将来这天为周三");
		    break;
		    case 4 : System.out.println("将来这天为周四");
		    break;
		    case 5 : System.out.println("将来这天为周五");
		    break;
		    case 6 : System.out.println("将来这天为周六");
		    break;

		}
		
		
		
		//让用户输入重量、英尺和英寸，求出BMI值，并表示bmi说明；
		//1 pound = 0.45359237 kg; 1 inch = 0.0254 meter; 1 feet = 12 inchs;
	
		System.out.print("请输入磅数：");
		double pounds = input.nextDouble();
		System.out.print("请输入英尺：");
		double feet = input.nextDouble();
		System.out.print("请输入英寸：");
		double inchs = input.nextDouble();
		
		double meter = (12 * feet + inchs) * 0.0254;
		double kg = pounds * 0.45359237;
		double BMI = kg / Math.pow(meter,2);
		
		System.out.println("your BMI is " + BMI);
		
		if ( BMI < 18.5 ) {
			System.out.println("Underweight");
		}
		else if ( BMI < 25.0 ) {
			System.out.println("Normal");
		}
		else if ( BMI < 30.0 ) {
			System.out.println("Overweight");
		}
		else {
			System.out.println("Obese");
		}
		
		
		//编写程序，提示用户输入三个整数，以非降序的形式显示这三个整数；
		System.out.print("请输入三个整数：");
		int num1 = input.nextInt();
		int num2 = input.nextInt();
		int num3 = input.nextInt();
		
		if (num1 <= num2 && num2 <= num3) {
			System.out.println("这三个整数依次是：" + num3 + " , " + num2 + " , " + num1);
		}
		else if (num1 <= num2 && num3 <= num1) {
			System.out.println("这三个整数依次是：" + num2 + " , " + num1 + " , " + num3);
		}
		else if (num1 <= num3 && num3 <= num2) {
			System.out.println("这三个整数依次是：" + num2 + " , " + num3 + " , " + num1);
		}
		else if (num2 <= num1 && num1 <= num3) {
			System.out.println("这三个整数依次是：" + num3 + " , " + num1 + " , " + num2);
		}
		else if (num3 <= num2 && num2 <= num1) {
			System.out.println("这三个整数依次是：" + num1 + " , " + num2 + " , " + num3);
		}
		else {
			System.out.println("这三个整数依次是：" + num1 + " , " + num3 + " , " + num2);
		}
		
		
		//ISBN-10以前是10位整数,最后一位d10整数是校验和，它是使用公式用另外九个数计算出来的。
		//（d1 * 1 + d2 * 2 + d3 * 3 + d4 * 4 + d5 * 5 + d6 * 6 + d7*7 + d8 * 8 + d9 * 9 ) % 11;
		//如果校验和为10.则最后一位应该表示为X。提示用户输入前9个数，然后显示10位ISBN。
		//程序应该读取整数；
		
		System.out.print("请输入ISBN的前九位：");
		int d_1 = input.nextInt();
		int d2 = input.nextInt();
		int d3 = input.nextInt();
		int d4 = input.nextInt();
		int d5 = input.nextInt();
		int d6 = input.nextInt();
		int d7 = input.nextInt();
		int d8 = input.nextInt();
		int d9 = input.nextInt();
		
		int d10 = (d_1 * 1 + d2 * 2 + d3 * 3 + d4 * 4 + d5 * 5 + d6 * 6 + d7 *  7 + d8 * 8 + d9 * 9 ) % 11;
		
		if ( d10 != 10 ) {
			System.out.println("The ISBN-10 number is " + d_1 + d2 + d3 + d4 + d5 + d6 + d7 + d8 + d9 + d10);
		}
		else {
			System.out.println("The ISBN-10 number is " + d_1 + d2 + d3 + d4 + d5 + d6 + d7 + d8 + d9 + "X");
		}
		
		//随机产生一个计算两个小于100的整数的加法问题；
		int random1 = (int)(Math.random() * 100);
		int random2 = (int)(Math.random() * 100);
		
		System.out.print("请输入" + random1 + " + " + random2 + "的答案");
		int answer3 = input.nextInt();
		
		if (random1 + random2 == answer3) {
			System.out.println("you are correct");
		}
		else {
			System.out.println("you are wrong");
			System.out.println("the correct answer is " + (random1 + random2));
		}
		
		
		//提示用户输入月份和年份，然后显示这个月的天数。
		//闰年有366天，二月份29天，平年365天，二月份28天；
		//1、3、5、7、8、10、12月，都是31天，4、6、9、11月，都是30天；
		System.out.print("请输入月份：");
		int m = input.nextInt();
		System.out.print("请输入年份：");
		int year = input.nextInt();
		int days = 0;
		
		boolean isLeapYear = ( year % 4 == 0 && year % 100 != 0 ) || (year % 400 == 0);
	    switch(m) {
		    case 1 :
		    case 3 :
		    case 5 :
		    case 7 :
		    case 8 :
		    case 10 :
		    case 12 :
		    	days = 31;
		    	break;
		    case 4 :
		    case 6 :
		    case 9 :
		    case 11 :
		    	days = 30;
		    	break;
		    case 2 :
		    	if (isLeapYear) {
		    		days = 29;
		    }
		    	else {
		    		days = 28;
		    	}
		    	break; 
		    default :
		    	System.out.println("月份输入错误！");
		    	System.exit(0);
		}
		System.out.printf("天数：%d\n", days);
		
		//提示用户输入一个三位的整数，然后确定它是否是回文数字；
		//回文数字指从左到右，以及从右到左都一样。
		System.out.print("请输入一个三位整数：");
		int intNumber = input.nextInt();
		
		int units = intNumber % 10;
		int hundreds = intNumber /100;
		
		if (hundreds == units) {
			System.out.printf("%d这个数字是回文数字。",intNumber);
		}
		else {
			System.out.printf("%d不是回文数字。",intNumber);
		}
		
		//计算所有登记的婚姻状态的税款；
		//提示用户输入登记的身份以及可征税收入，然后计算出税款；
		//0-单身纳税人；1-已婚共同纳税人；2-已婚单独纳税人；3-家庭户主纳税人；
		System.out.print("请输入你的身份(0,1,2,3)：");
		int id = input.nextInt();
		System.out.print("请输入可征税收入：");
		int income = input.nextInt();
		double tax = 0;
		
		switch(id) {
		case 0 :
			if(income <= 8350) {
				tax = income * 0.1;
			}
			else if (income <= 33950){
				tax = (income - 8350) * 0.15 + 8350 * 0.1;
			}
			else if (income <= 52250) {
				tax = (income - 33950) * 0.25 + (33950 - 8350) * 0.15 + 8350 * 0.1;
			}
			else if (income <= 171550) {
				tax = (income - 52250) * 0.28 + (52250 - 33950) * 0.25 + (33950 - 8350) * 0.15 + 8350 * 0.1;
			}
			else if (income <= 372950) {
				tax = (income - 171550) * 0.33 + (171550 - 52250) * 0.28 + (52250 - 33950) * 0.25 + (33950 - 8350) * 0.15 + 8350 * 0.1;
			}
			else {
				tax = (income - 372950) * 0.35 + (372950 - 171550) * 0.33 + (171550 - 52250) * 0.28 + (52250 - 33950) * 0.25 + (33950 - 8350) * 0.15 + 8350 * 0.1;				
			}
		    break;
		case 1 :
			if (income <= 16700) {
				tax = income * 0.1;
			}
			else if (income <= 67900) {
				tax = (income - 16700) * 0.15 + 16700  * 0.1;
			}
			else if (income <= 137050) {
				tax = (income - 67900) * 0.25 + (67900 - 16700) * 0.15 + 16700 * 0.1;
			}
			else if (income <= 208850) {
				tax  = (income - 137050) * 0.28 + (137050 - 67900) * 0.25 + (67900 - 16700) * 0.15 + 16700 * 0.1;
			}
			else if (income <= 372950) {
				tax = (income - 208850) * 0.33 + (208850 - 137050) * 0.28 + (137050 - 67900) * 0.25 + (67900 - 16700) * 0.15 + 16700 * 0.1;
			}
			else {
				tax = (income - 372950) * 0.35 + (372950 - 208850) * 0.33 + (208850 - 137050) * 0.28 + (137050 - 67900) * 0.25 + (67900 - 16700) * 0.15 + 16700 * 0.1;
			}
		    break;
		case 2 :
			if (income <= 8350) {
				tax = income * 0.1;
			}
			else if (income <= 33950){
				tax = (income - 8350) * 0.15 + 8350 * 0.1;
			}
			else if (income <= 68525) {
				tax = (income - 33950) * 0.25 + (33950 - 8350) * 0.15 + 8350 * 0.1;
			}
			else if (income <= 104425) {
				tax = (income - 68525) * 0.28 + (68525 - 33950) * 0.25 + (33950 - 8350) * 0.15 + 8350 * 0.1;
			}
			else if (income <= 186475) {
				tax = (income - 104425) * 0.33 + (104425 - 68525) * 0.28 + (68525 - 33950) * 0.25 + (33950 - 8350) * 0.15 + 8350 * 0.1;
			}
			else {
				tax = (income - 186475) * 0.35 + (186475 - 104425) * 0.33 + (104425 - 68525) * 0.28 + (68525 - 33950) * 0.25 + (33950 - 8350) * 0.15 + 8350 * 0.1;
			}
			break;
		case 3 :
			if (income <= 11950) {
				tax = income * 0.1;
			}
			else if (income <= 45500) {
				tax = (income - 11950) * 0.15 + 11950 * 0.1;
			}
			else if (income <= 117450) {
				tax = (income - 45500) * 0.25 + (45500 - 11950) * 0.15 + 11950 * 0.1;
			}
			else if (income <= 190200) {
				tax = (income - 117450) * 0.28 + (117450 - 45500) * 0.25 + (45500 - 11950) * 0.15 + 11950 * 0.1;
			}
			else if (income <= 372950) {
				tax = (income - 190200) * 0.33 + (190200 - 117450) * 0.28 + (117450 - 45500) * 0.25 + (45500 - 11950) * 0.15 + 11950 * 0.1;
			}
			else {
				tax = (income - 372950) * 0.35 + (372950 - 190200) * 0.33 + (190200 - 117450) * 0.28 + (117450 - 45500) * 0.25 + (45500 - 11950) * 0.15 + 11950 * 0.1;
			}
			break;
	
		default :
			System.out.print("输入错误！");
			System.exit(0);
			break;
		}
		System.out.println("税款为：" + tax);
		
		
		//编写程序，让用户猜一猜是硬币的正面还是反面。
		//这个程序随机产生0 或者 1，它们分别表示硬币的正面和反面。
		//程序提示用户输入一个猜测值，然后报告这个猜测值是正确的还是错误的；
		System.out.print("请猜是硬币的正面还是反面，并输入猜测值（0 为正面，1 为反面）：");
		int guess = input.nextInt();
		int coin = (int)(Math.random() * 2);
		
		if (guess < 2 && guess >= 0) {
		    if (guess == coin) {
			System.out.println("you are correct!");
		}
		    else {
			System.out.println("you are wrong!");
		}
		}
		else {
			System.out.println("输入错误！");
		}
		
		
		//随机产生三位整数的彩票。
		//程序提示用户输入一个三位整数，然后依照下面的规则判定用户是否赢得奖金；
		//1）如果用户输入的所有数匹配彩票的确切顺序，奖金是10000美元；
		//2）如果用户输入的所有匹配彩票的所有数字，奖金是3000美元；
		//3）如果用户输入的其中一个数匹配彩票号码中的一个数，奖金是1000美元；
		int lottery = (int)(100 + Math.random() * 900);
		System.out.println("请输入一个三位整数：");
		int guessLottery = input.nextInt();
		
		int lotteryDigit1 = lottery / 100;
		int temp1 = lottery % 100;
		int lotteryDigit2 = temp1 / 10;
		int lotteryDigit3 = temp1 % 10;
		
		int guessDigit1 = guessLottery / 100;
		int temp2 = lottery % 100;
		int guessDigit2 = temp2 / 10;
		int guessDigit3 = temp2 % 10;
		
		System.out.println("lottery number is " + lottery);
		
		if (lottery == guessLottery) {
			System.out.println("you win 10000$");
		}
		else if ((lotteryDigit1 == guessDigit1) && (lotteryDigit2 == guessDigit3) && (lotteryDigit3 == guessDigit2)) {
			System.out.println("you win 3000$");
		}
		else if ((lotteryDigit1 == guessDigit2) && (lotteryDigit2 == guessDigit1) && (lotteryDigit3 == guessDigit3)) {
			System.out.println("you win 3000$");
		}
		else if ((lotteryDigit1 == guessDigit2) && (lotteryDigit2 == guessDigit3) && (lotteryDigit3 == guessDigit1)) {
			System.out.println("you win 3000$");
		}
		else if ((lotteryDigit1 == guessDigit3) && (lotteryDigit2 == guessDigit2) && (lotteryDigit3 == guessDigit1)) {
			System.out.println("you win 3000$");
		}
		else if ((lotteryDigit1 == guessDigit3) && (lotteryDigit2 == guessDigit1) && (lotteryDigit3 == guessDigit2)) {
			System.out.println("you win 3000$");
		}
		else {
			System.out.println("sorry,no match");
		}
		
		
		//编写程序，显示矩形中一个随机点的坐标。
		//矩形中心位于（0,0）、宽100，高200.
		double p1 = Math.random() * 50;
		double p2 = Math.random() * 100;
		double p3 = Math.random() * (-50);
		double p4 = Math.random() * (-100);
		
		double point1 = p1 + p3;
		double point2 = p2 + p4;
		
		System.out.println("随机点的坐标为：" + "( " + point1 + " , " + point2 + " ) ");
		
		
		
		//编写程序
		//玩剪刀石头布；
		//程序提示用户随机产生一个数，这个数为0、1或者2，分别表示石头、剪刀和布；
		//用户输入值（0、1 或者2），然后显示消息，表明用户和计算机谁赢了游戏；
		System.out.print("电脑随机出一个剪刀石头布，请用户输入剪刀（0），石头（1），布（2）：");
		int value1 = input.nextInt();
		int value2 = (int)(Math.random() * 3);
		
		switch(value1) {
		case 0 :
			if (value2 == 0) {
				System.out.print("It is a draw(平手)");
			}
			else if (value2 == 1){
				System.out.print("The computer won");
			}
			else {
				System.out.print("you won");
			}
			break;
		case 1 :
			if (value2 == 0) {
				System.out.print("you won");
			}
			else if (value2 == 1) {
				System.out.print("It is draw");
			}
			else {
				System.out.print("The computer won");
			}
			break;
		case 2 :
			if (value2 == 0) {
				System.out.print("The computer won");
			}
			else if (value2 == 1) {
				System.out.print("you won");
			}
			else {
				System.out.print("It is draw");
			}
			break;
		default :
			System.out.print("输入错误");
			System.exit(0);
		}
		
		
		
		//运输成本c（w）根据运输重量来计算；
		//若0<w<=1,c=3.5;
		//若1<w<=3,c=5.5;
		//若3<w<=10,c=8.5;
		//若10<w<=20,c=10.5;
		//提示用户输入包裹重量，显示运输成本；
		System.out.print("请输入包裹重量：");
		double w = input.nextDouble();
		
		double cw = 0;
		
		if (w > 0 && w <= 1) {
			 cw = 3.5;
			 System.out.println("运输成本为：" + cw);
		}
		else if (w <= 3) {
			 cw = 5.5;
			 System.out.println("运输成本为：" + cw);
		}
		else if (w <= 10) {
			cw = 8.5;
			System.out.println("运输成本为：" + cw);
		}
		else if (w <= 20) {
			cw = 10.5;
			System.out.println("运输成本为：" + cw);
		}
		else {
			System.out.println("The package cannot be shipped");
		}
		
		
		//编写程序，读取三角形的三条边；
		//如果输入值合法就计算这个三角形的周长；
		//否则，显示这些输入值不合法。
		//如果任意两条边的和大于第三边，那么输入值都是合法的；
		System.out.print("分别输入三角的三条边：");
		double a2 = input.nextDouble();
		double b2 = input.nextDouble();
		double c2 = input.nextDouble();
		
		if (a2 + b2 > c2 || a2 + c2 > b2 || b2 + c2 > a2) {
			System.out.println("三角形的周长：" + (a2 + b2 + c2));
		}
		else {
			System.out.println("输入不合法");
		}
		
		
		//计算寒冷程度；
		//t(wc) = 35.74 + 0.6215t(a) - 35.75v^0.16 + 0.4275t(a) * v^0.16;
		System.out.print("请输入华氏摄氏度,以及风速 : ");
		double outTemperature = input.nextDouble();
		double windSpeed = input.nextDouble();
		
		if(outTemperature < 41 && outTemperature > -58 && windSpeed >= 2) {
		    double chillIndex = 35.74 + 0.6215 * outTemperature -35.75 * Math.pow(windSpeed, 0.16) + 0.4275 * outTemperature * Math.pow(windSpeed, 0.16);
		    System.out.println("风寒温度为： " + chillIndex);
		}
		
		else {
			System.out.println("温度或者风速不是合法数值");
		}
		
		
		//泽勒一致性，用来计算某天是周几的算法；
		//公式为  h = (q + 26 * (m + 1)/10 + k + k / 4 + j / 4 + 5 * j ) % 7;
		//h 为一个星期中的某一天（0为周六，1 为周日，……，6为周五；）
		//q 是某月的第几天；
		//m 是 月份（3 为三月，……，12为12月，同年一二月，分别记为上年的13 和 14月）；
		//j 是世纪数（即  year / 100 的绝对值）；
		//k 是该世纪的第几年（即 year % 100）；
		//程序提示用户输入年月和该月的哪天，然后显示它是周几；
		System.out.print("请输入年份（如2012）：");
		int years = input.nextInt();
		System.out.print("请输入月份（1-12）：");
		int months = input.nextInt();
		System.out.print("请输入日期（1-31）：");
		int day_s = input.nextInt();
		int h = 0;
		
	    if (months <= 2 && months > 0) {	    
	    	years--;
	    	months = months + 12;
	    	h = (day_s + 26 * (months + 1) / 10 + years % 100 + (years % 100) / 4 + Math.abs(years / 100) / 4 + 5 * Math.abs(years / 100)) % 7;
	    	if (h == 0 ) {
	 	    	System.out.println("今天是周六");
	 	    }
	 	    else if ( h == 1) {
	 	    	System.out.println("今天是周日");
	 	    }
	 	    else {
	 	    	System.out.println("今天是周" + (h - 1));
	 	    }
	    } 
	    else if (months <= 12 && months > 2) {
	    	h = (day_s + 26 * (months + 1) / 10 + years % 100 + (years % 100) / 4 + Math.abs(years / 100) / 4 + 5 * Math.abs(years / 100)) % 7;
	    	 if (h == 0 ) {
	 	    	System.out.println("今天是周六");
	 	    }
	 	    else if ( h == 1) {
	 	    	System.out.println("今天是周日");
	 	    }
	 	    else {
	 	    	System.out.println("今天是周" + (h - 1));
	 	    }
	    }
	    else {
	    	System.out.println("输入错误！");
	    }
	    
	    
	    
	    //编写程序，提示用户输入一个点（x,y）；
	    //检查这个点是否在以（0,0）为圆心、半径为10的圆内；
	    //点到圆心的距离小于半径；
	    System.out.print("请输入点（x,y），以空格分隔x与y：");
	    double x1 = input.nextDouble();
	    double y1 = input.nextDouble();
	    
	    double distance = Math.sqrt(Math.pow(x1, 2) + Math.pow(y1, 2));
	    
	    if (distance < 10) {
	    	System.out.println("(" + x1 + " , " + y1 + ")" + " is in the circle");
	    }
	    else {
	    	System.out.println("(" + x1 + " , " + y1 + ")" + " is not in the circle");
	    }
	    
	    
	    //编写程序，提示用户输入点（x,y）；
	    //然后检测该点是否在以原点（0,0）为中心，宽为10，高为5的矩形中。
	    
	    System.out.print("请输入点（x,y），以空格分隔x与y：");
	    double x2 = input.nextDouble();
	    double y2 = input.nextDouble();
	    
	    if (x2 < 5 && x2 > -5 ) {
	    	if (y2 < 2.5 && y2 > -2.5) {
	    		System.out.println("(" + x2 + " , " + y2 + ")" + " is  in the rectangle");
	    	}
	    	else {
	    		System.out.println("(" + x2 + " , " + y2 + ")" + " is not in the rectangle");
	    	}
	    }
	    else {
	    	System.out.println("(" + x2 + " , " + y2 + ")" + " is not in the rectangle");
	    }
	    
	    
	    //编写程序，模拟一副52张的牌中选择一张牌。
	    //显示牌的大小；
	    //思路：1-13 为黑梅花花色，14-26为红方块花色，27-39为红心花色，40-52为黑桃花色；
	    int digit = (int)(Math.random() * 53);
	    
	    if ( digit <= 13) {
	    	if (digit <= 10) {
	    		System.out.println("The card you picked is " + digit + " of" + " Clubs");
	    	}
	    	else if (digit == 11) {
	    	    System.out.println("The card you picked is Jack of Clubs");
	     	}
	    	else if (digit == 12) {
	    	    System.out.println("The card you picked is Queen of Clubs");
	    	}
	    	else {
	    		 System.out.println("The card you picked is King of Clubs");
	    	}
	    }
	    else if (digit <= 26) {
	    	if (digit <= 23) {
	    		System.out.println("The card you picked is " + (digit % 13) + " of" + " Diamonds");
	    	}
	    	else if (digit % 13 == 11) {
	    	    System.out.println("The card you picked is Jack of Diamonds");
	     	}
	    	else if (digit % 13 == 12) {
	    	    System.out.println("The card you picked is Queen of Diamonds");
	    	}
	    	else  {
	    		 System.out.println("The card you picked is King of Diamonds");
	    	}
	    }
	    else if (digit <= 39) {
	    	if (digit <= 36) {
	    		System.out.println("The card you picked is " + (digit % 13) + " of" + " Hearts");
	    	}
	    	else if (digit % 13 == 11) {
	    	    System.out.println("The card you picked is Jack of Diamonds");
	     	}
	    	else if (digit % 13 == 12) {
	    	    System.out.println("The card you picked is Queen of Diamonds");
	    	}
	    	else  {
	    		 System.out.println("The card you picked is King of Diamonds");
	    	}
	    }
	    else {
	    	if (digit <= 49) {
	    		System.out.println("The card you picked is " + (digit % 13) + " of" + " Spades");
	    	}
	    	else if (digit % 13 == 11) {
	    	    System.out.println("The card you picked is Jack of Diamonds");
	     	}
	    	else if (digit % 13 == 12) {
	    	    System.out.println("The card you picked is Queen of Diamonds");
	    	}
	    	else  {
	    		 System.out.println("The card you picked is King of Diamonds");
	    	}
	    }
	    
	    
	    //提示用户输入一个整数值；
	    //判断是否能被5和6整除，是否能被5或者6整除，以及是否能被5或者6整除但是不能同时被它们整除；
	    System.out.println("Enter an integer:");
	    int anInt = input.nextInt();
	    
	    boolean di = anInt % 5 == 0 && anInt % 6 == 0;
	    boolean di1 = anInt % 5 == 0 || anInt % 6 == 0;
	    boolean di2 = anInt % 5 == 0 ^ anInt % 6 == 0 ;
	    
	    System.out.println("Is " + anInt + " divisible by 5 and 6 ?    " + di);
	    System.out.println("Is " + anInt + " divisible by 5 or 6 ?    " +di1 );
	    System.out.println("Is " + anInt + " divisible by 5 or 6,but not both ?    " +di2 );
	    
	    
	    
	 
	    
	}
}
